{"version":3,"sources":["components/card/img sync /^/img.*/.jpg$","components/card/img/img1.jpg","components/card/img/img10.jpg","components/card/img/img1b.jpg","components/card/img/img2.jpg","components/card/img/img3.jpg","components/card/img/img4.jpg","components/card/img/img5.jpg","components/card/img/img6.jpg","components/card/img/img7.jpg","components/card/img/img8.jpg","components/card/img/img9.jpg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Card","prop1","className","cardProp3","cardProp2","name","console","log","src","require","alt","title","email","CardList","cardsPropImg","cardsProp1","cardElt","key","SearchBox","propPlaceHolder","handleChangeFct","type","placeholder","onChange","App","props","methodHandleChange","evt","setState","searchTxt1","target","value","state","classAnim","eltSearch","filteredCards2","tabCards","filter","eltTab","toLowerCase","includes","length","document","querySelector","fctClassAnim","imgSize1","constImgSize1","cards","fetch","then","resp1","json","users1","nbrCards","this","constSearchTxt1","filteredCards","filterBigLowNumber","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3a8abfbf.chunk.js","sourcesContent":["var map = {\n\t\"./img1.jpg\": 17,\n\t\"./img10.jpg\": 18,\n\t\"./img1b.jpg\": 19,\n\t\"./img2.jpg\": 20,\n\t\"./img3.jpg\": 21,\n\t\"./img4.jpg\": 22,\n\t\"./img5.jpg\": 23,\n\t\"./img6.jpg\": 24,\n\t\"./img7.jpg\": 25,\n\t\"./img8.jpg\": 26,\n\t\"./img9.jpg\": 27\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 16;","module.exports = __webpack_public_path__ + \"static/media/img1.fbcd9aad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img10.a3888a7b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img1b.554f79cb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.5db90353.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.c5f841b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img4.546e2eae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img5.28c7a183.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img6.0e0a5c33.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img7.a2bff14d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img8.1f95bcfc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img9.5e88698d.jpg\";","import React from 'react';\r\nimport './card.styles.css';\r\n//import img01 from './img/img01.jpg' // relative path to image \r\n\r\nexport const Card = (prop1) => (\r\n    <div className={ 'card-container ' + prop1.cardProp3 + '-card' }>\r\n    {/*<div className='card-container'> */}\r\n        <strong> {prop1.cardProp2.name} </strong>\r\n        { console.log('In Card ',prop1.cardProp2.id\r\n                        ,'=>',prop1.cardProp2.name\r\n             ,'prop1.cardProp3=>',prop1.cardProp3) }\r\n        {/* ---my pics--- */}\r\n        <img src={ require(`./img/img${prop1.cardProp2.id}.jpg`)} \r\n            alt={`Pic ${prop1.cardProp2.id}`} \r\n            title={`Image ${prop1.cardProp2.id}`}\r\n            /*className={`${prop1.cardProp3}`}*/\r\n        />  \r\n        <strong> email: </strong>\r\n        <span>{prop1.cardProp2.email}</span>\r\n        <strong> cardProp3: </strong>\r\n        <span>Pic size=&gt;{prop1.cardProp3}</span>\r\n        {/* \r\n        {/*---origin pics---\r\n        <img src={ require(`./img/img${prop1.cardProp2.id}.jpg`)} \r\n            alt={`Pic ${prop1.cardProp2.id}`} \r\n            title={`Image ${prop1.cardProp2.id}`}\r\n        />\r\n        <img src={`https://robohash.org/${prop1.cardProp2.id}?set=set4&size=180x180`} alt=\"pic 03\"/>\r\n        <img src={ require('./img/min/img02.jpg')} alt={\"pic 02\"} />\r\n        <img title={\"Image 01\"} src={img01} alt={\"pic 01\"} />\r\n        <img src={`https://robohash.org/${prop1.cardProp2.id}?set=set3`} alt=\"pic 03\"/>\r\n        */}\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component.jsx';\r\n\r\nexport const CardList = (prop1) => (\r\n    <div className={'card-list-divStyle ' + prop1.cardsPropImg + '-list'}>\r\n        { /* console.log('In Card-list prop1.cardsPropImg=>', prop1.cardsPropImg) */}\r\n        { prop1.cardsProp1.map(\r\n            cardElt => (\r\n                <Card key={cardElt.id} cardProp2={cardElt}\r\n                    cardProp3={prop1.cardsPropImg} />\r\n            )\r\n        )}\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n/*destructuring object-prop entered*/\r\nexport const SearchBox = ({ propPlaceHolder, handleChangeFct }) => (\r\n  <input\r\n    className='search-box'\r\n    type='search'\r\n    name=\"search1\"\r\n    //destructuring obj entered into 2 objs\r\n    placeholder={propPlaceHolder}\r\n    onChange={handleChangeFct}\r\n  />\r\n);\r\n\r\n/*no destructuring prop entered, classic affectation\r\nexport const SearchBox = (prop1) => (\r\n  <input\r\n    className='search-box'\r\n    type='search'\r\n    name=\"search1\"\r\n    placeHolder={prop1.propPlaceHolder}\r\n    onChange={prop1.handleChangeFct}\r\n  />\r\n);*/\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { CardList } from './components/card-list/card-list.component.jsx';\r\nimport { SearchBox } from './components/search-box/search-box.component.jsx';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cards: [],\r\n      searchTxt1: '',\r\n      imgSize1: \"img-class\"\r\n    };\r\n    //binding is necessary to make `this` work in a fct1 called as callback method from another method\r\n    //this.fct1 = this.fct1.bind(this);\r\n  }\r\n  //*** Life Cycle method componentDidMount() {}\r\n  componentDidMount() {\r\n    fetch('./data/json-data-users.json') //fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(resp1 => resp1.json())\r\n      .then(users1 => this.setState({ cards: users1 }))\r\n  }\r\n  //*** method perso created as an Arrow Function\r\n  methodHandleChange = (evt) => { // (evt) =>{this.setState ( {searchTxt1:evt.target.value} )\r\n    console.log(\"Change Event !!!\");\r\n    // setState() \r\n    this.setState({ searchTxt1: evt.target.value },\r\n      () => {\r\n        console.log(\"in Event deb searchTxt1=\", this.state.searchTxt1,\" classAnim=\", classAnim);\r\n\r\n        //  fctClassAnim() placed in callback of setState( ,()=>... )   \r\n        fctClassAnim(this.state.searchTxt1);\r\n\r\n        console.log(\"in Event fin1 classAnim=\", classAnim,'; this.state.imgSize1=', this.state.imgSize1);\r\n        //\r\n        this.setState( { imgSize1: classAnim },\r\n          console.log(\"in Event fin2 classAnim= \", classAnim,'; this.state.imgSize1= ', this.state.imgSize1,'; constImgSize1= ', constImgSize1)\r\n          );\r\n      });\r\n    // \r\n    // function fctClassAnim() anime filtered cards */\r\n    var classAnim = \"img-class\";\r\n    const tabCards = this.state.cards;\r\n    const constImgSize1 = this.state.imgSize1;\r\n    function fctClassAnim(eltSearch) {\r\n      console.log('in fctClassAnim()=> eltSearch=', eltSearch);\r\n      /*constSearchTxt1 = this.state.searchTxt1;*/\r\n      var filteredCards2 = tabCards.filter(eltTab =>\r\n        eltTab.name.toLowerCase().includes(eltSearch.toLowerCase()));\r\n      console.log('in fctClassAnim()=> filteredCards2.length=',\r\n        filteredCards2.length);\r\n      /*document.querySelector('.img-class').classList.toggle('img-class-filtered');*/\r\n      if (filteredCards2.length < tabCards.length) {\r\n        classAnim = \"card-list-filtered\";\r\n        /*document.getElementsByTagName('img')[0].style.height='100px';\r\n            this.state.cards.map( cardElt => \r\n              <h1 key={cardElt.id}> {cardElt.name} </h1> )\r\n          document.querySelectorAll('.img-class')[0].classList.toggle('img-class-filtered');\r\n        */\r\n      }\r\n      else {\r\n        classAnim = \"img-class\";\r\n      };\r\n      console.log('in fctClassAnim()=> filteredCards2.length=',\r\n        filteredCards2.length, '=> classAnim=', classAnim);\r\n      console.log('document.querySelector(\\'.img-class\\')=',\r\n        document.querySelector('.img-class'));\r\n    }\r\n    //\r\n  }\r\n  //*** Life Cycle method render() {}\r\n  render() {\r\n    /*destructuring object state, doing same as:*/\r\n    /* const tabCards = this.state.cards; const constSearchTxt1 = this.state.searchTxt1; */\r\n    const { cards: tabCards, searchTxt1: constSearchTxt1, imgSize1: constImgSize1 } = this.state;\r\n    const filteredCards = tabCards.filter(eltTab =>\r\n      eltTab.name.toLowerCase().includes(constSearchTxt1.toLowerCase()));\r\n    console.log('const filteredCards.length=',\r\n      filteredCards.length);\r\n    //               \r\n    //counting filtered cards + according text\r\n    var nbrCards;\r\n    if (filteredCards.length > 1) {\r\n      nbrCards = \" ( \" + filteredCards.length + \" cards in list now ) \";\r\n    }\r\n    else {\r\n      nbrCards = \" ( \" + filteredCards.length + \" card in list now ) \";\r\n    }\r\n    //coloring text number filtered cards \r\n    var filterBigLowNumber = \"bigLow-search\";\r\n    if (filteredCards.length < tabCards.length) {\r\n      filterBigLowNumber = \"bigLow-search-filtered\";\r\n    }\r\n    /*\r\n    function fctEv(event1){\r\n      console.log(\"fctEv starts with:\",event1);\r\n      fctTestv();\r\n      document.querySelector('.js-grid').classList.toggle('container-grid-animate');\r\n      document.querySelector('.img-class').classList.toggle('card-list-filtered');\r\n    };\r\n    */\r\n    return (\r\n      <div className=\"App img-class\">\r\n        <h1> Cards Selection Board </h1>\r\n        <label>\r\n          <i className=\"bigLow js-grid\">Search in cards titles -&gt;</i>\r\n        </label>\r\n        <SearchBox\r\n          propPlaceHolder=\"Type text for Searching\"\r\n          handleChangeFct={this.methodHandleChange}\r\n        />\r\n        <label>\r\n          <i className={\"bigLow \" + filterBigLowNumber}>&nbsp; {nbrCards}</i>\r\n        </label>\r\n        {/*<CardList cardsProp1={this.state.cards} />*/}\r\n        <CardList cardsProp1={filteredCards} cardsPropImg={constImgSize1} />\r\n        {/*1 children of CardList component \r\n          <h2>CardList children here </h2>\r\n          {\r\n            this.state.cards.map( cardElt => \r\n              <h1 key={cardElt.id}> {cardElt.name} </h1> )\r\n          }\r\n        </CardList> \r\n          */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}