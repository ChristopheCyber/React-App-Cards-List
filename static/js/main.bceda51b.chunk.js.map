{"version":3,"sources":["components/card/card.component.jsx","jsParticles/particles-configs.js","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","containerPages/MainPage/mainpage.component.jsx","redux/card/card-actions-types.js","App.js","redux/card/card-actions.js","serviceWorker.js","redux/card/card-reducer.js","redux/root-reducer.js","redux/store.js","index.js","components/card/img sync /^/img.*/.jpg$","components/card/img/img1.jpg","components/card/img/img10.jpg","components/card/img/img11.jpg","components/card/img/img12.jpg","components/card/img/img12b.jpg","components/card/img/img13.jpg","components/card/img/img2.jpg","components/card/img/img3.jpg","components/card/img/img4.jpg","components/card/img/img4c.jpg","components/card/img/img5.jpg","components/card/img/img6.jpg","components/card/img/img7.jpg","components/card/img/img8.jpg","components/card/img/img8b.jpg","components/card/img/img9.jpg"],"names":["connect","state","cardType","keyCardType","propAllFields","className","name","src","require","id","default","alt","href","website","target","rel","cardname","jspConfig1","fpsLimit","interactivity","detectsOn","events","onClick","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","color","value","animation","speed","sync","links","width","collisions","move","direction","outMode","random","straight","number","density","value_area","shape","type","detectRetina","jspConfig2","onclick","trail","delay","minimumValue","startValue","destroy","particles_nb","remove","CardList","prop1","cardsPropImg","options","cardsProp1","map","cardElt","SearchBox","propPlaceHolder","handleChangeFct","placeholder","onChange","MainPage","nbrCards","tabCards","constSearchTxt1","constPicContentType","methodHandleChange","filteredCards","filter","eltTab","toLowerCase","includes","length","filterBigLowNumber","cardActionsTypes","App","props","evt","console","log","setState","searchTxt1","eltSearch","filteredCards2","classAnim","document","querySelector","fctClassAnim","picContentType","cards","fctSetCardType","fetch","then","resp1","json","users1","this","React","Component","dispatch","payload","Boolean","window","location","hostname","match","INITIAL_STATE","cardTypeReducer","action","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.bceda51b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n//import img01 from './img/img01.jpg' // relative path to image \r\n\r\n// for REDUX use\r\nimport { connect } from 'react-redux';\r\n//for REDUX / Selectors\r\n// import { selectCurrentUser } from '../../redux/user/user.selectors.js';\r\n\r\n//Redux exporting: export const Card = (prop1) => (\r\nexport const Card = ( {propAllFields} , cardType ) => (\r\n    <div className={'card-container ' + cardType + '-card'} >\r\n        {/*<div className='card-container'> */}\r\n        <strong> {propAllFields.name} </strong>\r\n        { /* console.log('In Card ', propAllFields.id\r\n            , '=>', propAllFields.name\r\n            , 'cardType=>', cardType) */ }\r\n            \r\n        {/* ---my pics--- */}\r\n        {/* WebPack pbm require('pic') => <img src=\"[object Module]\"/>\r\n            SOLUTION => put require('pic').DEFAULT as: \r\n            <img src={require(`./img/img${propAllFields.id}.jpg`).default} />\r\n\r\n            or => without require(); and with placing directory /img/ in /public (= window.location.origin = http://localhost:3000/):    \r\n            <img src={window.location.origin + `/img/img${propAllFields.id}.jpg`} />\r\n        */}\r\n        <img src={require(`./img/img${propAllFields.id}.jpg`).default}\r\n            alt={`Pic ${propAllFields.id}`}\r\n        /* title={`${propAllFields.cardname} card`} \r\n           className={`${cardType}`} */\r\n        />\r\n        <span>\r\n            <a href={propAllFields.website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <strong>Website Info: </strong>{propAllFields.cardname}\r\n            </a>\r\n        </span>\r\n        <strong> Pic content : </strong>\r\n        <span>\r\n            One of my skills{cardType === \"img-class\" ? \".\" : \" (filtered)\"}\r\n        </span>\r\n        {/* \r\n        {/*---origin pics---\r\n        <img src={ require(`./img/img${propAllFields.id}.jpg`)} \r\n            alt={`Pic ${propAllFields.id}`} \r\n            title={`Image ${propAllFields.id}`}\r\n        />\r\n        <img src={`https://robohash.org/${propAllFields.id}?set=set4&size=180x180`} alt=\"pic 03\"/>\r\n        <img src={ require('./img/min/img02.jpg')} alt={\"pic 02\"} />\r\n        <img title={\"Image 01\"} src={img01} alt={\"pic 01\"} />\r\n        <img src={`https://robohash.org/${propAllFields.id}?set=set3`} alt=\"pic 03\"/>\r\n        */}\r\n    </div>\r\n);\r\n\r\n//REDUCER simple calling \r\nconst mapStateToProps = (state) => ({\r\n    cardType: state.keyCardType.cardType\r\n  }); \r\n//connecting component to Redux:\r\nexport default connect(mapStateToProps)(Card);\r\n  \r\n","export const jspConfig1 = {\r\n  // background: {\r\n  //   color: {\r\n  //     value: \"#0d47a1\",\r\n  //   },\r\n  // },\r\n  fpsLimit: 60,\r\n  interactivity: {\r\n    detectsOn: \"window\",\r\n    events: {\r\n      onClick: {\r\n        enable: true,\r\n        mode: \"grab\",\r\n      },\r\n      onHover: {\r\n        enable: true,\r\n        mode: \"push\",\r\n      },\r\n      resize: true,\r\n    },\r\n    modes: {\r\n      bubble: {\r\n        distance: 400,\r\n        duration: 2,\r\n        opacity: 0.8,\r\n        size: 40,\r\n      },\r\n      push: {\r\n        quantity: 4,\r\n      },\r\n      repulse: {\r\n        distance: 50,\r\n        duration: 0.6,\r\n      },\r\n    },\r\n  },\r\n  particles: {\r\n    color: {\r\n      value: \"#ff0000\",\r\n      animation: {\r\n        enable: true,\r\n        speed: 40,\r\n        sync: true\r\n      }\r\n    },\r\n    links: {\r\n      color: \"#ffffff\",\r\n      distance: 150,\r\n      enable: true,\r\n      opacity: 0,\r\n      width: 1,\r\n    },\r\n    collisions: {\r\n      enable: true,\r\n    },\r\n    move: {\r\n      direction: \"random\",\r\n      enable: true,\r\n      outMode: \"out\",\r\n      random: true,\r\n      speed: 2,\r\n      straight: true,\r\n    },\r\n    number: {\r\n      density: {\r\n        enable: true,\r\n        value_area: 1000,\r\n      },\r\n      value: 80,\r\n    },\r\n    opacity: {\r\n      value: 0.5,\r\n    },\r\n    shape: {\r\n      type: \"circle\",\r\n    },\r\n    size: {\r\n      random: true,\r\n      value: 7,\r\n    },\r\n  },\r\n  detectRetina: true,\r\n};\r\nexport const jspConfig2 = {\r\n  // background: {\r\n  //   color: {\r\n  //     value: \"#000000\",\r\n  //   },\r\n  // },\r\n  detectRetina: true,\r\n  fpsLimit: 60,\r\n  interactivity: {\r\n    detectsOn: \"window\",\r\n    events: {\r\n      onclick: {\r\n        enable: true,\r\n        mode: \"push\",\r\n      },\r\n      onHover: {\r\n        mode: \"trail\",\r\n        enable: true,\r\n      }\r\n    },\r\n    modes: {\r\n      repulse: {\r\n        distance: 100,\r\n        duration: 0.2,\r\n      },\r\n      trail: {\r\n        delay: 0.08,\r\n        quantity: 1.5,\r\n        particles: {\r\n          color: {\r\n            value: \"#ff0000\",\r\n            animation: {\r\n              enable: true,\r\n              speed: 150,\r\n              sync: true\r\n            }\r\n          },\r\n          collisions: {\r\n            enable: true\r\n          },\r\n          links: {\r\n            enable: true\r\n          },\r\n          move: {\r\n            outMode: \"out\",\r\n            speed: 1\r\n          },\r\n          size: {\r\n            value: 5,\r\n            animation: {\r\n              enable: true,\r\n              speed: 4,\r\n              minimumValue: 1,\r\n              sync: true,\r\n              startValue: \"min\",\r\n              destroy: \"max\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      push: {\r\n        particles_nb: 34,\r\n      },\r\n      remove: {\r\n        particles_nb: 20,\r\n        duration: 0.2,\r\n        distance: 10,\r\n      },\r\n\r\n    },\r\n    resize: true\r\n  },\r\n  particles: {\r\n    color: {\r\n      color: \"random\",\r\n      animation: {\r\n        enable: true,\r\n        sync: false,\r\n        speed: 50\r\n      },\r\n      value: \"#f00\"\r\n    },\r\n    links: {\r\n      color: \"random\",\r\n      distance: 150,\r\n      enable: true,\r\n      opacity: 1,\r\n      width: 1,\r\n    },\r\n    collisions: {\r\n      enable: true,\r\n    },\r\n    move: {\r\n      direction: \"random\",\r\n      enable: true,\r\n      outMode: \"bounce\",\r\n      random: true,\r\n      speed: 2,\r\n      straight: false,\r\n    },\r\n    number: {\r\n      density: {\r\n        enable: true\r\n      }\r\n    },\r\n    opacity: {\r\n      animation: {\r\n        enable: true,\r\n        minimumValue: 0.3,\r\n        speed: 0.5\r\n      },\r\n      value: 0.8,\r\n      random: {\r\n        enable: true,\r\n        minimumValue: 0.3\r\n      }\r\n    },\r\n    size: {\r\n      animation: {\r\n        enable: true,\r\n        minimumValue: 1,\r\n        speed: 3\r\n      },\r\n      value: 3,\r\n      random: {\r\n        enable: true,\r\n        minimumValue: 1\r\n      }\r\n    }\r\n  }\r\n};","import React from 'react';\r\nimport './card-list.styles.css';\r\n// import { Card } from '../card/card.component.jsx';\r\nimport Card from '../card/card.component.jsx';\r\n//TypeScript tsParticles API :\r\nimport Particles from \"react-tsparticles\";\r\nimport { jspConfig2 } from \"../../jsParticles/particles-configs.js\";\r\n\r\nexport const CardList = (prop1) => (\r\n    <div className={'card-list-divStyle ' + prop1.cardsPropImg + '-list'}>\r\n        {/* tsParticles */}\r\n        <div id=\"tsparticles\">\r\n            <Particles\r\n                options={jspConfig2}\r\n            />\r\n        </div>\r\n        { /* console.log('In Card-list prop1.cardsPropImg=>', prop1.cardsPropImg) */}\r\n        { prop1.cardsProp1.map(\r\n            cardElt => (\r\n                <Card key={cardElt.id} propAllFields={cardElt}\r\n                />\r\n                // propImg={prop1.cardsPropImg} />\r\n            )\r\n        )}\r\n    </div>\r\n);","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\n/*destructuring object-prop entered*/\r\nexport const SearchBox = ({ propPlaceHolder, handleChangeFct }) => (\r\n  \r\n  <input id=\"searchBoxId\"\r\n    className='search-box'\r\n    type='search'\r\n    name=\"search1\"\r\n    //destructuring obj entered into 2 objs\r\n    placeholder={propPlaceHolder}\r\n    onChange={handleChangeFct}\r\n  />\r\n);\r\n\r\n/*no destructuring prop entered, classic affectation\r\nexport const SearchBox = (prop1) => (\r\n  <input\r\n    className='search-box'\r\n    type='search'\r\n    name=\"search1\"\r\n    placeHolder={prop1.propPlaceHolder}\r\n    onChange={prop1.handleChangeFct}\r\n  />\r\n);*/\r\n\r\n\r\n","import React from 'react';\r\nimport './mainpage.styles.css';\r\nimport { CardList } from '../../components/card-list/card-list.component.jsx';\r\nimport { SearchBox } from '../../components/search-box/search-box.component.jsx';\r\n//TypeScript tsParticles API :\r\nimport Particles from \"react-tsparticles\";\r\nimport { jspConfig1 } from \"../../jsParticles/particles-configs\";\r\n\r\nexport const MainPage = ({tabCards, constSearchTxt1,  constPicContentType, methodHandleChange}) => {\r\n  //*** Life Cycle method render() {}\r\n    const filteredCards = tabCards.filter(eltTab =>\r\n      eltTab.name.toLowerCase().includes(constSearchTxt1.toLowerCase()));\r\n    // console.log('const filteredCards.length=',\r\n    //   filteredCards.length);\r\n    //               \r\n    //counting filtered cards + according text\r\n    var nbrCards;\r\n    if (filteredCards.length > 1) {\r\n      nbrCards = \" ( \" + filteredCards.length + \" cards in list now ) \";\r\n    }\r\n    else {\r\n      nbrCards = \" ( \" + filteredCards.length + \" card in list now ) \";\r\n    }\r\n    //coloring text number filtered cards \r\n    var filterBigLowNumber = \"bigLow-search\";\r\n    if (filteredCards.length < tabCards.length) {\r\n      filterBigLowNumber = \"bigLow-search-filtered\";\r\n    }\r\n    return (\r\n      <div className=\"MainPage img-class\" >\r\n        <h1> Cards Selection Board </h1>\r\n        <label>\r\n          <i className=\"bigLow js-grid\">Search in cards titles -&gt;</i>\r\n        </label>\r\n        <SearchBox\r\n          id = \"searchBoxId\"\r\n          propPlaceHolder=\"Type text for Searching\"\r\n          handleChangeFct={methodHandleChange}\r\n        />\r\n        <label>\r\n          <i className={\"bigLow \" + filterBigLowNumber}>&nbsp; {nbrCards}</i>\r\n        </label>\r\n        <CardList cardsProp1={filteredCards} cardsPropImg={constPicContentType} />\r\n        {/* tsParticles */}\r\n        <div id=\"tsparticles\">\r\n          <Particles\r\n            options={jspConfig1}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","export const cardActionsTypes = {\r\n    SET_CARD_TYPE: 'SET_CARD_TYPE'\r\n  };","import React from 'react';\r\nimport './App.css';\r\nimport { MainPage } from './containerPages/MainPage/mainpage.component.jsx';\r\n// for Redux use :\r\nimport { connect } from 'react-redux';\r\nimport { setCardType } from './redux/card/card-actions';\r\n//\r\nexport class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cards: [],\r\n      searchTxt1: '',\r\n      picContentType: \"img-class\"\r\n    };\r\n    //binding is necessary to make `this` work in a fct1 called as callback method from another method\r\n    //this.fct1 = this.fct1.bind(this);\r\n  }\r\n  //*** Life Cycle method componentDidMount() {}\r\n  componentDidMount() {\r\n    fetch('./data/json-data-users.json') //fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(resp1 => resp1.json())\r\n      .then(users1 => this.setState({ cards: users1 }))\r\n  }\r\n  //*** method perso created as an Arrow Function\r\n  methodHandleChange = (evt) => { // (evt) =>{this.setState ( {searchTxt1:evt.target.value} )\r\n    console.log(\"Change Event !!!\");\r\n    // setState() \r\n    this.setState({ searchTxt1: evt.target.value },\r\n      () => {\r\n        // console.log(\"in Event deb searchTxt1=\", this.state.searchTxt1, \" classAnim=\", classAnim);\r\n\r\n        //  fctClassAnim() placed in callback of setState( ,()=>... )   \r\n        fctClassAnim(this.state.searchTxt1);\r\n\r\n        // console.log(\"in Event fin1 classAnim=\", classAnim, '; this.state.picContentType=', this.state.picContentType);\r\n        //\r\n        this.setState({ picContentType: classAnim },\r\n          // console.log(\"in Event fin2 classAnim= \", classAnim, '; this.state.picContentType= ', this.state.picContentType, '; constPicContentType= ', constPicContentType)\r\n        );\r\n      });\r\n    // \r\n    // function fctClassAnim() anime filtered cards */\r\n    var classAnim = \"img-class\";\r\n    const tabCards = this.state.cards;\r\n    const constPicContentType = this.state.picContentType;\r\n    //Redux:\r\n    this.props.fctSetCardType(constPicContentType);\r\n\r\n    function fctClassAnim(eltSearch) {\r\n      console.log('in fctClassAnim()=> eltSearch=', eltSearch);\r\n      /*constSearchTxt1 = this.state.searchTxt1;*/\r\n      var filteredCards2 = tabCards.filter(eltTab =>\r\n        eltTab.name.toLowerCase().includes(eltSearch.toLowerCase()));\r\n      console.log('in fctClassAnim()=> filteredCards2.length=',\r\n        filteredCards2.length);\r\n      if (filteredCards2.length < tabCards.length) {\r\n        classAnim = \"card-list-filtered\";\r\n      }\r\n      else {\r\n        classAnim = \"img-class\";\r\n      };\r\n      console.log('in fctClassAnim()=> filteredCards2.length=',\r\n        filteredCards2.length, '=> classAnim=', classAnim);\r\n      console.log('document.querySelector(\\'.img-class\\')=',\r\n        document.querySelector('.img-class'));\r\n    }\r\n    //\r\n  }\r\n  //*** Life Cycle method render() {}\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MainPage tabCards={this.state.cards} constSearchTxt1={this.state.searchTxt1} constPicContentType={this.state.picContentType} methodHandleChange={this.methodHandleChange}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// export default App;\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  //defining the fct \r\n  fctSetCardType: (type) => dispatch(setCardType(type))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(App);","import { cardActionsTypes } from './card-actions-types';\r\n//corresponding to what search-box Reducer is expecting\r\nexport const setCardType = arg => ({\r\n    type: cardActionsTypes.SET_CARD_TYPE,\r\n    payload: arg\r\n  });","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { cardActionsTypes } from './card-actions-types';\r\n\r\n//defining a no-empty Reducer's initial state :\r\nconst INITIAL_STATE = {\r\n    cardType: null\r\n}\r\n// passing INITIAL_STATE as 'default-parameter value' of state (JS6)\r\n// in case state is Undefined/Not set => will b set as value='null'\r\nconst cardTypeReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        // TYPE=> \"SET_CARD_TYPE\"\r\n        case cardActionsTypes.SET_CARD_TYPE:\r\n            //rendering when 'action fired'\r\n            console.log(\"cardActionsTypes.SET_CARD_TYPE =\",cardActionsTypes.SET_CARD_TYPE,\" => action.payload  =\",action.payload);\r\n            return {\r\n                ...state, //everything else in the state\r\n                cardType: action.payload //<=our PAYLOAD, what is updated\r\n            };\r\n        default: return state; //in case no actions matching here\r\n    }\r\n}\r\n\r\nexport default cardTypeReducer;","// For writing the Redux Store:\r\nimport { combineReducers } from 'redux';\r\n\r\n// import userReducer from './user/user-reducer';\r\nimport cardTypeReducer from './card/card-reducer';\r\n\r\nexport default combineReducers({\r\n    //key property(=> slice of the state = individual Reducer)\r\n    // user: userReducer,\r\n    keyCardType: cardTypeReducer\r\n}) // exporting all the JSON full state object\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\n// import Reducers combined:\r\nimport rootReducer from './root-reducer';\r\n\r\n//store takes Middlewares fcts inside an Array for applyMiddleware\r\nconst middlewares = [logger];\r\n\r\n/*\r\nconst store = createStore( rootReducer, \r\n    applyMiddleware(...middlewares) ); \r\nexport default store;\r\n*/\r\n//for creating the store:\r\nexport const store = createStore(rootReducer, \r\n    applyMiddleware(...middlewares));\r\n    // ... => applying on all Array elemts <=> applyMiddleware(logger, .. )\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//REDUX Provider class component giving access to Store & Providers, wrapping all App\r\nimport { Provider } from 'react-redux';\r\n//store created from all Reducers combined + Middlewares\r\nimport { store } from './redux/store';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}> {/*store dispatched on all App*/}\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>\r\n  , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","var map = {\n\t\"./img1.jpg\": 75,\n\t\"./img10.jpg\": 76,\n\t\"./img11.jpg\": 77,\n\t\"./img12.jpg\": 78,\n\t\"./img12b.jpg\": 79,\n\t\"./img13.jpg\": 80,\n\t\"./img2.jpg\": 81,\n\t\"./img3.jpg\": 82,\n\t\"./img4.jpg\": 83,\n\t\"./img4c.jpg\": 84,\n\t\"./img5.jpg\": 85,\n\t\"./img6.jpg\": 86,\n\t\"./img7.jpg\": 87,\n\t\"./img8.jpg\": 88,\n\t\"./img8b.jpg\": 89,\n\t\"./img9.jpg\": 90\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 74;","export default __webpack_public_path__ + \"static/media/img1.031af203.jpg\";","export default __webpack_public_path__ + \"static/media/img10.f9a102f8.jpg\";","export default __webpack_public_path__ + \"static/media/img11.f5eb563c.jpg\";","export default __webpack_public_path__ + \"static/media/img12.76e7df93.jpg\";","export default __webpack_public_path__ + \"static/media/img12b.e4572e82.jpg\";","export default __webpack_public_path__ + \"static/media/img13.5752f586.jpg\";","export default __webpack_public_path__ + \"static/media/img2.f6bfd64c.jpg\";","export default __webpack_public_path__ + \"static/media/img3.a06785df.jpg\";","export default __webpack_public_path__ + \"static/media/img4.961cedf9.jpg\";","export default __webpack_public_path__ + \"static/media/img4c.9f69afa7.jpg\";","export default __webpack_public_path__ + \"static/media/img5.53c9eda6.jpg\";","export default __webpack_public_path__ + \"static/media/img6.78cd670d.jpg\";","export default __webpack_public_path__ + \"static/media/img7.86b7169b.jpg\";","export default __webpack_public_path__ + \"static/media/img8.f83c1d3e.jpg\";","export default __webpack_public_path__ + \"static/media/img8b.0f3e8ebe.jpg\";","export default __webpack_public_path__ + \"static/media/img9.5b3672d2.jpg\";"],"sourceRoot":""}